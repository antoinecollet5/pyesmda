# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.8.5 # defaults to latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  QT_DEBUG_PLUGINS: 1
  QT_QPA_PLATFORM: offscreen

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - apt update
  - apt install -y xvfb # Sets up a headless display
  - sleep 3

stages:
  - Static Analysis
  - Test
  - Deploy

test:
  stage: Test
  script:
    - pip install -e .
    - pip install -r requirements_dev.txt
    - xvfb-run py.test -s --cov=pyesmda --cov-report xml --cov-report html --cov-report term --cov-config=.coveragerc --color=yes
  artifacts:
    paths:
      - htmlcov
      - coverage.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ${CI_PROJECT_DIR/coverage.xml
    when: always



flake8:
  image: python:latest
  stage: Static Analysis
  allow_failure: true
  script:
    - pip install -r requirements_dev.txt
    - flake8 pyesmda --format=html --htmldir=flake-report
  artifacts:
    paths:
      - flake-report
    when: on_failure


tox:
  stage: Test
  script:
    - pip install tox
    # an alternative approach is to install and run:
    - xvfb-run tox
    # run the command here
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  artifacts:
    paths:
      - dist/*.whl
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ${CI_PROJECT_DIR/coverage.xml
    expire_in: 1 week

